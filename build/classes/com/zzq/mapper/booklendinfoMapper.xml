<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzq.mapper.booklendinfoMapper">
  <resultMap id="BaseResultMap" type="com.zzq.entity.booklendinfo">
    <id column="actionid" jdbcType="INTEGER" property="actionid" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="bookid" jdbcType="INTEGER" property="bookid" />
    <result column="lendtime" jdbcType="TIMESTAMP" property="lendtime" />
    <result column="isover" jdbcType="INTEGER" property="isover" />
    <result column="isdel" jdbcType="INTEGER" property="isdel" />
  </resultMap>
  <resultMap id="fullResultMap" type="com.zzq.entity.booklendinfo">
    <id column="actionid" jdbcType="INTEGER" property="actionid" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="bookid" jdbcType="INTEGER" property="bookid" />
    <result column="lendtime" jdbcType="TIMESTAMP" property="lendtime" />
    <result column="isover" jdbcType="INTEGER" property="isover" />
    <result column="isdel" jdbcType="INTEGER" property="isdel" />
	<result property="bookname" column="bookname" jdbcType="VARCHAR"/>
	<result property="isgrounding" column="isgrounding" jdbcType="INTEGER"/>
	<result property="price" column="price" jdbcType="DOUBLE"/>
	<result property="subdate" column="subdate" jdbcType="DATE"/>
	<result property="classify" column="classify" jdbcType="INTEGER"/>
  </resultMap>
   
  
  <sql id="Base_Column_List">
    actionid, userid, bookid, lendtime, isover, isdel 
  </sql>
  <sql id="full_Column_List">
  
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from booklendinfo
    where actionid = #{actionid,jdbcType=INTEGER}
  </select>
  <!-- 完成 -->
  <select id="userselectleadinfoByuserid" parameterType="java.lang.Integer" resultMap="fullResultMap">
 SELECT
	actionid,userid,lendtime,isover,isdel,bookname,isgrounding,price,subdate,classify,e.bookid
FROM
	(
		SELECT
			*
		FROM
			booklendinfo
		<where>
		<if test="userid!=null">
			userid = #{userid}
		</if>
		</where>	
	) e
INNER JOIN (
	SELECT
		*
	FROM
		bookinfo
	<where> 
	<if test="bookclass!=null">
	 and classify =#{bookclass}
	</if>
    <if test="bookname!=null and bookname!=''">
     and bookname like'%${bookname}%'
    </if>
	</where>
	
) d ON e.bookid = d.bookid
  </select>
   <select id="userselectleadinfoByuseridstatue" parameterType="java.lang.Integer" resultMap="fullResultMap">
 SELECT
	actionid,userid,lendtime,isover,isdel,bookname,isgrounding,price,subdate,classify,e.bookid
FROM
	(
		SELECT
			*
		FROM
			booklendinfo
			where
			isover !=0
	) e
INNER JOIN (
	SELECT
		*
	FROM
		bookinfo
	<where> 
	<if test="bookclass!=null">
	 and classify =#{bookclass}
	</if>
    <if test="bookname!=null and bookname!=''">
     and bookname like'%${bookname}%'
    </if>
	</where>
	
) d ON e.bookid = d.bookid
  </select>
  
  <select id="selectByUseridAndBookidCheckIsover"  resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from booklendinfo
    where userid = #{userid,jdbcType=INTEGER} 
     <if test="bookid!= null">
       and bookid = #{bookid,jdbcType=INTEGER}
      </if>
    	and isover !=0
  </select>
  
  <select id="selectByUseridAndBookid"  resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from booklendinfo
    where userid = #{userid,jdbcType=INTEGER} 
     <if test="bookid!= null">
       and bookid = #{bookid,jdbcType=INTEGER}
      </if>
    	
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from booklendinfo
    where actionid = #{actionid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zzq.entity.booklendinfo">
    insert into booklendinfo ( userid, bookid, 
      lendtime,isover
      )
    values ( #{userid,jdbcType=INTEGER}, #{bookid,jdbcType=INTEGER}, 
      #{lendtime,jdbcType=TIMESTAMP},#{isover,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zzq.entity.booklendinfo">
    insert into booklendinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="actionid != null">
        actionid,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="bookid != null">
        bookid,
      </if>
      <if test="lendtime != null">
        lendtime,
      </if>
      <if test="isover != null">
        isover,
      </if>
      <if test="isdel != null">
        isdel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="actionid != null">
        #{actionid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="bookid != null">
        #{bookid,jdbcType=INTEGER},
      </if>
      <if test="lendtime != null">
        #{lendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isover != null">
        #{isover,jdbcType=INTEGER},
      </if>
      <if test="isdel != null">
        #{isdel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzq.entity.booklendinfo">
    update booklendinfo
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="bookid != null">
        bookid = #{bookid,jdbcType=INTEGER},
      </if>
      <if test="lendtime != null">
        lendtime = #{lendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isover != null">
        isover = #{isover,jdbcType=INTEGER},
      </if>
      <if test="isdel != null">
        isdel = #{isdel,jdbcType=INTEGER},
      </if>
    </set>
    where actionid = #{actionid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzq.entity.booklendinfo">
    update booklendinfo
    set userid = #{userid,jdbcType=INTEGER},
      bookid = #{bookid,jdbcType=INTEGER},
      lendtime = #{lendtime,jdbcType=TIMESTAMP},
      isover = #{isover,jdbcType=INTEGER},
      isdel = #{isdel,jdbcType=INTEGER}
    where actionid = #{actionid,jdbcType=INTEGER}
  </update>
</mapper>